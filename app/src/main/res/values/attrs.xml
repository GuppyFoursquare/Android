<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="MySwitch">
        <!-- Drawable to use as the "thumb" that switches back and forth. -->
        <attr name="my_thumb"  format="reference"/>
        <!-- Drawable to use as the "track" that the switch thumb slides within. -->
        <attr name="my_track" format="reference" />
        <!-- Text to use when the switch is in the checked/"on" state. -->
        <attr name="my_textOn" format="reference|string" />
        <!-- Text to use when the switch is in the unchecked/"off" state. -->
        <attr name="my_textOff" format="reference|string" />

        <!-- drawablw to use when the switch is in the checked/"on" state. -->
        <attr name="my_drawableOn" format="reference" />
        <!-- drawablw to use when the switch is in the unchecked/"off" state. -->
        <attr name="my_drawableOff" format="reference" />

        <!-- if the switch should operate like iOS UISwitch -->
        <attr name="my_pushStyle" format="boolean" />
        <!-- if text should be drawn on the Thumb or On the track. -->
        <attr name="my_textOnThumb" format="boolean" />
        <!-- if the thumb should be allowed to move more beyond the switch boundaries -->
        <attr name="my_thumbExtraMovement" format="dimension" />
        <!-- Amount of padding on either side of text within the switch thumb. -->
        <attr name="my_thumbTextPadding" format="dimension" />
        <!-- Amount of padding on either side of text within the switch track. -->
        <attr name="my_trackTextPadding" format="dimension" />
        <!-- TextAppearance style for text displayed on the switch thumb. -->
        <attr name="my_switchTextAppearanceAttrib" format="reference" />
        <!-- Minimum width for the switch component -->
        <attr name="my_switchMinWidth" format="dimension" />
        <!-- Minimum height for the switch component -->
        <attr name="my_switchMinHeight" format="dimension" />
        <!-- Minimum space between the switch and caption text -->
        <attr name="my_switchPadding" format="dimension" />

        <attr name="my_orientation" >
            <!-- the switch moves only on the x-axis(horizontally) -->
            <enum name="horizontal" value="1" />
            <!-- the switch moves only on the y-axis(vertically) -->
            <enum name="vertical" value="0" />
        </attr>

        <!-- the track drawable will be drawn on top of these background. So if
             these back grounds were to be visible, the track has to have transparency -->
        <!-- The background when left side of the switch is visible -->
        <attr name="my_leftBackground" format="reference"/>

        <!-- The background when right side of the switch is visible -->
        <attr name="my_rightBackground" format="reference"/>

        <!-- We need a mask drawable to mask the background, then draw the track -->
        <attr name="my_backgroundMask" format="reference"/>
    </declare-styleable>

    <declare-styleable name="mySwitchTextAppearanceAttrib">
        <!-- Text color. -->
        <attr name="my_textColor" format="color" />
        <!-- Size of the text. Recommended dimension type for text is "sp" for scaled-pixels (example: 15sp). -->
        <attr name="my_textSize"  format="dimension" />
        <!-- Style (bold, italic, bolditalic) for the text. -->
        <attr name="my_textStyle" >
            <flag name="normal" value="0" />
            <flag name="bold" value="1" />
            <flag name="italic" value="2" />
        </attr>

        <!-- Typeface (normal, sans, serif, monospace) for the text. -->
        <attr name="my_typeface" format="reference">
            <enum name="normal" value="0" />
            <enum name="sans" value="1" />
            <enum name="serif" value="2" />
            <enum name="monospace" value="3" />
        </attr>
        <!-- Color of the text selection highlight. -->
        <attr name="my_textColorHighlight" format="color" />
        <!-- Color of the hint text. -->
        <attr name="my_textColorHint" format="color" />
        <!-- Color of the links. -->
        <attr name="my_textColorLink" format="color" />
        <!-- Present the text in ALL CAPS. This may use a small-caps form when available. -->
        <attr name="my_textAllCaps" format="boolean" />
    </declare-styleable>
    <!-- Default style for the Switch widget. -->
    <attr name="my_SwitchStyleAttr" format="reference" />

    <!-- Declare custom theme attributes that allow changing which styles are
         used for button bars depending on the API level.
         ?android:attr/buttonBarStyle is new as of API 11 so this is
         necessary to support previous API levels. -->
    <declare-styleable name="ButtonBarContainerTheme">
        <attr name="metaButtonBarStyle" format="reference" />
        <attr name="metaButtonBarButtonStyle" format="reference" />
    </declare-styleable>
</resources>